// File generated from our OpenAPI spec by Stainless.

package com.legalesign_sdk.api.models.templatepdf.fields

import com.fasterxml.jackson.module.kotlin.jacksonTypeRef
import com.legalesign_sdk.api.core.jsonMapper
import com.legalesign_sdk.api.models.document.ListMeta
import com.legalesign_sdk.api.models.document.PdfFieldValidationEnum
import kotlin.jvm.optionals.getOrNull
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class FieldListResponseTest {

    @Test
    fun create() {
        val fieldListResponse =
            FieldListResponse.builder()
                .meta(
                    ListMeta.builder()
                        .limit(0)
                        .next("next")
                        .offset(0)
                        .previous("previous")
                        .totalCount(0)
                        .build()
                )
                .addObject(
                    FieldListResponse.Object.builder()
                        .ax(0.215025906735751f)
                        .ay(0.367795045508885f)
                        .bx(0.446891191709845f)
                        .by(0.425434569754081f)
                        .elementType(FieldListResponse.Object.ElementType.SIGNATURE)
                        .page(0)
                        .signer(1)
                        .align(FieldListResponse.Object.Align._1)
                        .fieldorder(0)
                        .fontName(FieldListResponse.Object.FontName.EMPTY)
                        .fontSize(12L)
                        .hideBorder(false)
                        .label("Sign here,")
                        .labelExtra("")
                        .logicAction(FieldListResponse.Object.LogicAction._1)
                        .logicGroup("")
                        .mapTo("")
                        .optional(false)
                        .options("")
                        .substantive(false)
                        .validation(PdfFieldValidationEnum._1)
                        .value("value")
                        .build()
                )
                .addObject(
                    FieldListResponse.Object.builder()
                        .ax(0.20207253886010362f)
                        .ay(0.23421773535334944f)
                        .bx(0.47797927461139894f)
                        .by(0.24702651851894872f)
                        .elementType(FieldListResponse.Object.ElementType.TEXT)
                        .page(1)
                        .signer(1)
                        .align(FieldListResponse.Object.Align._1)
                        .fieldorder(0)
                        .fontName(FieldListResponse.Object.FontName.LIBERATION)
                        .fontSize(11L)
                        .hideBorder(false)
                        .label("")
                        .labelExtra("")
                        .logicAction(FieldListResponse.Object.LogicAction._1)
                        .logicGroup("")
                        .mapTo("")
                        .optional(false)
                        .options("")
                        .substantive(false)
                        .validation(PdfFieldValidationEnum._1)
                        .value("")
                        .build()
                )
                .build()

        assertThat(fieldListResponse.meta())
            .contains(
                ListMeta.builder()
                    .limit(0)
                    .next("next")
                    .offset(0)
                    .previous("previous")
                    .totalCount(0)
                    .build()
            )
        assertThat(fieldListResponse.objects().getOrNull())
            .containsExactly(
                FieldListResponse.Object.builder()
                    .ax(0.215025906735751f)
                    .ay(0.367795045508885f)
                    .bx(0.446891191709845f)
                    .by(0.425434569754081f)
                    .elementType(FieldListResponse.Object.ElementType.SIGNATURE)
                    .page(0)
                    .signer(1)
                    .align(FieldListResponse.Object.Align._1)
                    .fieldorder(0)
                    .fontName(FieldListResponse.Object.FontName.EMPTY)
                    .fontSize(12L)
                    .hideBorder(false)
                    .label("Sign here,")
                    .labelExtra("")
                    .logicAction(FieldListResponse.Object.LogicAction._1)
                    .logicGroup("")
                    .mapTo("")
                    .optional(false)
                    .options("")
                    .substantive(false)
                    .validation(PdfFieldValidationEnum._1)
                    .value("value")
                    .build(),
                FieldListResponse.Object.builder()
                    .ax(0.20207253886010362f)
                    .ay(0.23421773535334944f)
                    .bx(0.47797927461139894f)
                    .by(0.24702651851894872f)
                    .elementType(FieldListResponse.Object.ElementType.TEXT)
                    .page(1)
                    .signer(1)
                    .align(FieldListResponse.Object.Align._1)
                    .fieldorder(0)
                    .fontName(FieldListResponse.Object.FontName.LIBERATION)
                    .fontSize(11L)
                    .hideBorder(false)
                    .label("")
                    .labelExtra("")
                    .logicAction(FieldListResponse.Object.LogicAction._1)
                    .logicGroup("")
                    .mapTo("")
                    .optional(false)
                    .options("")
                    .substantive(false)
                    .validation(PdfFieldValidationEnum._1)
                    .value("")
                    .build(),
            )
    }

    @Test
    fun roundtrip() {
        val jsonMapper = jsonMapper()
        val fieldListResponse =
            FieldListResponse.builder()
                .meta(
                    ListMeta.builder()
                        .limit(0)
                        .next("next")
                        .offset(0)
                        .previous("previous")
                        .totalCount(0)
                        .build()
                )
                .addObject(
                    FieldListResponse.Object.builder()
                        .ax(0.215025906735751f)
                        .ay(0.367795045508885f)
                        .bx(0.446891191709845f)
                        .by(0.425434569754081f)
                        .elementType(FieldListResponse.Object.ElementType.SIGNATURE)
                        .page(0)
                        .signer(1)
                        .align(FieldListResponse.Object.Align._1)
                        .fieldorder(0)
                        .fontName(FieldListResponse.Object.FontName.EMPTY)
                        .fontSize(12L)
                        .hideBorder(false)
                        .label("Sign here,")
                        .labelExtra("")
                        .logicAction(FieldListResponse.Object.LogicAction._1)
                        .logicGroup("")
                        .mapTo("")
                        .optional(false)
                        .options("")
                        .substantive(false)
                        .validation(PdfFieldValidationEnum._1)
                        .value("value")
                        .build()
                )
                .addObject(
                    FieldListResponse.Object.builder()
                        .ax(0.20207253886010362f)
                        .ay(0.23421773535334944f)
                        .bx(0.47797927461139894f)
                        .by(0.24702651851894872f)
                        .elementType(FieldListResponse.Object.ElementType.TEXT)
                        .page(1)
                        .signer(1)
                        .align(FieldListResponse.Object.Align._1)
                        .fieldorder(0)
                        .fontName(FieldListResponse.Object.FontName.LIBERATION)
                        .fontSize(11L)
                        .hideBorder(false)
                        .label("")
                        .labelExtra("")
                        .logicAction(FieldListResponse.Object.LogicAction._1)
                        .logicGroup("")
                        .mapTo("")
                        .optional(false)
                        .options("")
                        .substantive(false)
                        .validation(PdfFieldValidationEnum._1)
                        .value("")
                        .build()
                )
                .build()

        val roundtrippedFieldListResponse =
            jsonMapper.readValue(
                jsonMapper.writeValueAsString(fieldListResponse),
                jacksonTypeRef<FieldListResponse>(),
            )

        assertThat(roundtrippedFieldListResponse).isEqualTo(fieldListResponse)
    }
}
